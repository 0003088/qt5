From aa0ff43fefd1fa748b1f30cad182e45e51cca756 Mon Sep 17 00:00:00 2001
From: Prasanth Ullattil <prasanth.ullattil@nokia.com>
Date: Thu, 10 Mar 2011 18:44:09 +0100
Subject: [PATCH] Install correct header files for webkit

---
 Source/WebKit/qt/QtWebKit.pro |   90 ++++++++++++++++++++---------------------
 Source/sync.profile           |    1 +
 2 files changed, 45 insertions(+), 46 deletions(-)

diff --git a/Source/WebKit/qt/QtWebKit.pro b/Source/WebKit/qt/QtWebKit.pro
index e572641..d38ddbd 100644
--- a/Source/WebKit/qt/QtWebKit.pro
+++ b/Source/WebKit/qt/QtWebKit.pro
@@ -260,64 +260,62 @@ contains(DEFINES, ENABLE_GEOLOCATION=1) {
     QMAKE_EXTRA_TARGETS += install
 }
 
-!CONFIG(QTDIR_build) {
-    exists($$OUTPUT_DIR/include/QtWebKit/classheaders.pri): include($$OUTPUT_DIR/include/QtWebKit/classheaders.pri)
-    WEBKIT_INSTALL_HEADERS = $$WEBKIT_API_HEADERS $$WEBKIT_CLASS_HEADERS
+exists($$OUTPUT_DIR/include/QtWebKit/classheaders.pri): include($$OUTPUT_DIR/include/QtWebKit/classheaders.pri)
+WEBKIT_INSTALL_HEADERS = $$WEBKIT_API_HEADERS $$WEBKIT_CLASS_HEADERS
 
-    !symbian-abld:!symbian-sbsv2 {
-        headers.files = $$WEBKIT_INSTALL_HEADERS
+!symbian-abld:!symbian-sbsv2 {
+    headers.files = $$WEBKIT_INSTALL_HEADERS
 
-        !isEmpty(INSTALL_HEADERS): headers.path = $$INSTALL_HEADERS/QtWebKit
-        else: headers.path = $$[QT_INSTALL_HEADERS]/QtWebKit
+    !isEmpty(INSTALL_HEADERS): headers.path = $$INSTALL_HEADERS/QtWebKit
+    else: headers.path = $$[QT_INSTALL_HEADERS]/QtWebKit
 
-        !isEmpty(INSTALL_LIBS): target.path = $$INSTALL_LIBS
-        else: target.path = $$[QT_INSTALL_LIBS]
+    !isEmpty(INSTALL_LIBS): target.path = $$INSTALL_LIBS
+    else: target.path = $$[QT_INSTALL_LIBS]
 
-        INSTALLS += target headers
-    } else {
-        # INSTALLS is not implemented in qmake's mmp generators, copy headers manually
-        inst_headers.commands = $$QMAKE_COPY ${QMAKE_FILE_NAME} ${QMAKE_FILE_OUT}
-        inst_headers.input = WEBKIT_INSTALL_HEADERS
-        inst_headers.CONFIG = no_clean
+    INSTALLS += target headers
+} else {
+    # INSTALLS is not implemented in qmake's mmp generators, copy headers manually
+    inst_headers.commands = $$QMAKE_COPY ${QMAKE_FILE_NAME} ${QMAKE_FILE_OUT}
+    inst_headers.input = WEBKIT_INSTALL_HEADERS
+    inst_headers.CONFIG = no_clean
 
-        !isEmpty(INSTALL_HEADERS): inst_headers.output = $$INSTALL_HEADERS/QtWebKit/${QMAKE_FILE_BASE}${QMAKE_FILE_EXT}
-        else: inst_headers.output = $$[QT_INSTALL_HEADERS]/QtWebKit/${QMAKE_FILE_BASE}${QMAKE_FILE_EXT}
+    !isEmpty(INSTALL_HEADERS): inst_headers.output = $$INSTALL_HEADERS/QtWebKit/${QMAKE_FILE_BASE}${QMAKE_FILE_EXT}
+    else: inst_headers.output = $$[QT_INSTALL_HEADERS]/QtWebKit/${QMAKE_FILE_BASE}${QMAKE_FILE_EXT}
 
-        QMAKE_EXTRA_COMPILERS += inst_headers
+    QMAKE_EXTRA_COMPILERS += inst_headers
 
-        install.depends += compiler_inst_headers_make_all
-    }
+    install.depends += compiler_inst_headers_make_all
+}
 
-    unix {
-        CONFIG += create_pc create_prl
-        QMAKE_PKGCONFIG_LIBDIR = $$target.path
-        QMAKE_PKGCONFIG_INCDIR = $$headers.path
-        QMAKE_PKGCONFIG_DESTDIR = pkgconfig
-        lib_replace.match = $$re_escape($$DESTDIR)
-        lib_replace.replace = $$[QT_INSTALL_LIBS]
-        QMAKE_PKGCONFIG_INSTALL_REPLACE += lib_replace
-    }
+unix {
+    CONFIG += create_pc create_prl
+    QMAKE_PKGCONFIG_LIBDIR = $$target.path
+    QMAKE_PKGCONFIG_INCDIR = $$headers.path
+    QMAKE_PKGCONFIG_DESTDIR = pkgconfig
+    lib_replace.match = $$re_escape($$DESTDIR)
+    lib_replace.replace = $$[QT_INSTALL_LIBS]
+    QMAKE_PKGCONFIG_INSTALL_REPLACE += lib_replace
+}
+
+mac {
+    !static:contains(QT_CONFIG, qt_framework):!CONFIG(webkit_no_framework) {
+        !build_pass {
+            message("Building QtWebKit as a framework, as that's how Qt was built. You can")
+            message("override this by passing CONFIG+=webkit_no_framework to build-webkit.")
 
-    mac {
-        !static:contains(QT_CONFIG, qt_framework):!CONFIG(webkit_no_framework) {
-            !build_pass {
-                message("Building QtWebKit as a framework, as that's how Qt was built. You can")
-                message("override this by passing CONFIG+=webkit_no_framework to build-webkit.")
-
-                CONFIG += build_all
-            } else {
-                isEmpty(QT_SOURCE_TREE):debug_and_release:TARGET = $$qtLibraryTarget($$TARGET)
-            }
-
-            CONFIG += lib_bundle qt_no_framework_direct_includes qt_framework
-            FRAMEWORK_HEADERS.version = Versions
-            FRAMEWORK_HEADERS.files = $${headers.files}
-            FRAMEWORK_HEADERS.path = Headers
-            QMAKE_BUNDLE_DATA += FRAMEWORK_HEADERS
+            CONFIG += build_all
+        } else {
+            isEmpty(QT_SOURCE_TREE):debug_and_release:TARGET = $$qtLibraryTarget($$TARGET)
         }
 
-        !contains(QT_CONFIG, modular):QMAKE_LFLAGS_SONAME = "$${QMAKE_LFLAGS_SONAME}$${DESTDIR}$${QMAKE_DIR_SEP}"
+        CONFIG += lib_bundle qt_no_framework_direct_includes qt_framework
+        FRAMEWORK_HEADERS.version = Versions
+        FRAMEWORK_HEADERS.files = $${headers.files}
+        FRAMEWORK_HEADERS.path = Headers
+        QMAKE_BUNDLE_DATA += FRAMEWORK_HEADERS
     }
+
+    !contains(QT_CONFIG, modular):QMAKE_LFLAGS_SONAME = "$${QMAKE_LFLAGS_SONAME}$${DESTDIR}$${QMAKE_DIR_SEP}"
 }
 
 symbian {
diff --git a/Source/sync.profile b/Source/sync.profile
index f8177ec..5991607 100644
--- a/Source/sync.profile
+++ b/Source/sync.profile
@@ -15,1 +15,2 @@
 );
+@ignore_for_master_contents = ( "qwebscriptworld.h" );
-- 
1.7.4.2.g597a6

